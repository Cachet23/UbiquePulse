[
    {
        "id": "e4744bec5a69cd62",
        "type": "tab",
        "label": "Flow 5",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5c9f1e3261048d21",
        "type": "serial in",
        "z": "e4744bec5a69cd62",
        "name": "Serial In",
        "serial": "ecc7e4ac137d1e4b",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "e1e53015378c6c86",
                "8aab7c7bf00b6b44"
            ]
        ]
    },
    {
        "id": "e1e53015378c6c86",
        "type": "function",
        "z": "e4744bec5a69cd62",
        "name": "Parse Data",
        "func": "var data;\ntry {\n    data = JSON.parse(msg.payload);\n} catch (e) {\n    node.error('JSON parsing error', msg);\n    return null;\n}\n\nif (data.heartRate == null || data.spO2 == null || data.red == null) {\n    node.error('Invalid data format', msg);\n    return null;\n}\n\nvar heartRateMsg = { payload: data.heartRate, topic: \"Heart Rate\" };\nvar spO2Msg = { payload: data.spO2, topic: \"SpO2\" };\nvar redMsg = { payload: data.red, topic: \"Red\" };\n\nreturn [heartRateMsg, spO2Msg, redMsg];\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "d5f00d592400363e",
                "46ce045851b32034",
                "a9ecbe66e57a78f2"
            ],
            [
                "cf7abf4643363384",
                "f2dca9854a14800b",
                "a9ecbe66e57a78f2"
            ],
            [
                "73089fcbdc0f4ca4",
                "fac5030fdc115839",
                "a9ecbe66e57a78f2"
            ]
        ]
    },
    {
        "id": "d5f00d592400363e",
        "type": "ui_chart",
        "z": "e4744bec5a69cd62",
        "name": "Heart Rate Graph",
        "group": "53f9cf165263ec0b",
        "order": 1,
        "width": "10",
        "height": 4,
        "label": "Heart Rate ",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "200",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "cf7abf4643363384",
        "type": "ui_chart",
        "z": "e4744bec5a69cd62",
        "name": "SpO2 Graph",
        "group": "53f9cf165263ec0b",
        "order": 2,
        "width": "10",
        "height": 4,
        "label": "SpO2",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff7f0e",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 650,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "73089fcbdc0f4ca4",
        "type": "ui_chart",
        "z": "e4744bec5a69cd62",
        "name": "Red Raw Graph",
        "group": "53f9cf165263ec0b",
        "order": 3,
        "width": "10",
        "height": 4,
        "label": "Red Raw Value",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "60000",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#d62728",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 660,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "46ce045851b32034",
        "type": "ui_text",
        "z": "e4744bec5a69cd62",
        "group": "53f9cf165263ec0b",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "Heart Rate Value",
        "label": "Current Heart Rate:",
        "format": "{{msg.payload}} bpm",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "f2dca9854a14800b",
        "type": "ui_text",
        "z": "e4744bec5a69cd62",
        "group": "53f9cf165263ec0b",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "SpO2 Value",
        "label": "Current SpO2:",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "x": 650,
        "y": 220,
        "wires": []
    },
    {
        "id": "fac5030fdc115839",
        "type": "ui_text",
        "z": "e4744bec5a69cd62",
        "group": "53f9cf165263ec0b",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "Red Raw Value",
        "label": "Current Red ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 660,
        "y": 320,
        "wires": []
    },
    {
        "id": "a9ecbe66e57a78f2",
        "type": "debug",
        "z": "e4744bec5a69cd62",
        "name": "Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 160,
        "wires": []
    },
    {
        "id": "7a9ed743234e29e2",
        "type": "mqtt out",
        "z": "e4744bec5a69cd62",
        "name": "PulseDataOut2Broker",
        "topic": "PulseData",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f0315e3a07795ade",
        "x": 680,
        "y": 480,
        "wires": []
    },
    {
        "id": "8aab7c7bf00b6b44",
        "type": "function",
        "z": "e4744bec5a69cd62",
        "name": "Prepare4Broker",
        "func": "var data;\ntry {\n    data = JSON.parse(msg.payload);\n} catch (e) {\n    node.error('JSON parsing error', msg);\n    return null;\n}\n\nif (data.heartRate == null || data.spO2 == null || data.red == null) {\n    node.error('Invalid data format', msg);\n    return null;\n}\n\nvar heartRateMsg = { payload: data.heartRate, topic: \"Heart Rate\" };\nvar spO2Msg = { payload: data.spO2, topic: \"SpO2\" };\nvar redMsg = { payload: data.red, topic: \"Red\" };\n\nreturn [heartRateMsg, spO2Msg, redMsg];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 480,
        "wires": [
            [
                "7a9ed743234e29e2"
            ]
        ]
    },
    {
        "id": "ecc7e4ac137d1e4b",
        "type": "serial-port",
        "name": "Input esp w/ sensor",
        "serialport": "/dev/cu.usbserial-0001",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "53f9cf165263ec0b",
        "type": "ui_group",
        "name": "myNodeRedDashboardGroupy",
        "tab": "6b431c80d453f656",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f0315e3a07795ade",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6b431c80d453f656",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
